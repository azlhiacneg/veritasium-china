#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Takes in Chinese .srt file and English .srt file. Generates .ass file with English .srt file, and converts Chinese file into a .txt
Ideal for mismatched Chinese and English .srt files
Chinese and English need to be manually put together

Created on Fri Aug 17 00:02:18 2018

@author: alicezhang
"""

import re
import os

def isNewLine(line):
    newline = re.compile(r"\A\\n")
    return newline.match(line)

def isTime(line):
    timeString = re.compile("[0-9:,\.]+( \-\-\> |,)[0-9:,\.]+")
    return timeString.match(line)

def isNumber(line):
    return line.isdigit()

def getLines(filename):
    subtitles = open(filename,'r')
    lines = subtitles.readlines()
    subtitles.close()
    return lines

def getTimes(line):
    try:
        (start,end) = line.split(' --> ')
        end = end.rstrip()
    except:
        (start,end) = line.split(',')
        end = end.rstrip()
    if end == '00:00:00,000': # Sometimes Last line in format is weird for some reason...
        end = start
    return start,end

def getVideo(directory = os.getcwd()):
    files = os.listdir()
    for file in files:
        if file[-4:]=='.mp4' and not(file == 'ENGsub.mp4'):
            videoTitle = file[:-4]
    return videoTitle

def getCHNFile(directory = os.getcwd()):
    video = getVideo(directory)
    return 'Chinese ' + video + '.srt'

def getENGFile(directory = os.getcwd()):
    video = getVideo(directory)
    return 'English ' + video + '.srt'

def deleteTime(filename,outputname = 'output.txt'):
    lines = getLines(filename)
    output = open(outputname,'w')
    newline = re.compile(r"\A\\n")
    numString = re.compile("[0-9 \-\>:]+")
    for line in lines:
        if not(newline.match(line)) and not(numString.match(line)):
            output.write(line.strip())
            if line != '\n':
                output.write(' ')
    output.close()

def writeStart(outputID,videoTitle,highQual=True):
    outputID.write('[Script Info]\n; Script generated by Aegisub 3.2.2\n; http://www.aegisub.org/\nTitle: Default Aegisub file\nScriptType: v4.00+\nWrapStyle: 0\nScaledBorderAndShadow: yes\nYCbCr Matrix: TV.601\n')
    if highQual:
        outputID.write('PlayResX: 1920\nPlayResY: 1080\n')
    else:
        outputID.write('PlayResX: 1280\nPlayResY: 720\n')
    outputID.write('\n[Aegisub Project Garbage]\n')
    outputID.write('Audio File: '+videoTitle+'.mp4\n')
    outputID.write('Video File: '+videoTitle+'.mp4\n')
    outputID.write('Video AR Mode: 4\nVideo AR Value: 1.777778\nVideo Zoom Percent: 1.000000\nActive Line: 1\nVideo Position: 1\n')
    outputID.write('\n[V4+ Styles]\nFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n')
    if highQual:
        outputID.write('Style: English,Yuanti SC,30,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1\n')
        outputID.write('Style: Chinese,Yuanti SC,55,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,2,2,10,10,45,1\n')
    else: # Different font size
        outputID.write('Style: English,Yuanti SC,25,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1\n')
        outputID.write('Style: Chinese,Yuanti SC,40,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,2,2,10,10,40,1\n')
    outputID.write('\n[Events]\nFormat: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n')

def writeln(lines,output,startline):
    """ lines: lines in the file
    """
    line = re.sub(r'<[^>]*>','',lines[startline])
    output.write(line.rstrip() + ' ')
    nextline = startline+1
    while nextline < len(lines) and lines[nextline] != '\n':
        line = re.sub(r'<[^>]*>','',lines[nextline])
        output.write(line.rstrip() + ' ')
        nextline = nextline+1
    return nextline

def writeSubs(CHN,ENG,output):
    # use this when time format is "0:00:01,24 --> 0:00:03,68"
    ENGlinenum = 0
    CHNlinenum = 0
    while ENGlinenum < len(ENG) or CHNlinenum < len(CHN):
        if CHNlinenum < len(CHN):
            line = CHN[CHNlinenum]
            if isTime(line):
                (start,end) = getTimes(line)
                output.write('\n')
                output.write('Dialogue: 0,')
                output.write(start[1:-4]+'.'+start[-3:-1]+','+end[1:-4]+'.'+end[-3:-1])
                CHNlinenum +=1
                output.write(',Chinese,,0,0,0,,')
                CHNlinenum = writeln(CHN,output,CHNlinenum)
            else:
                CHNlinenum +=1
        if ENGlinenum < len(ENG):
            line = ENG[ENGlinenum]
            if isTime(line):
                (start,end) = getTimes(line)
                output.write('\n')
                output.write('Dialogue: 0,')
                output.write(start[1:-4]+'.'+start[-3:-1]+','+end[1:-4]+'.'+end[-3:-1])
                ENGlinenum +=1
                output.write(',English,,0,0,0,,')
                ENGlinenum = writeln(ENG,output,ENGlinenum)
            else:
                ENGlinenum +=1

def writeSubsNew(CHN,ENG,output):
    # Time format is different from the earlier one
    # Use this when time format is "0:01:01.020,0:01:04.240"
    ENGlinenum = 0
    CHNlinenum = 0
    while ENGlinenum < len(ENG) or CHNlinenum < len(CHN):
        if CHNlinenum < len(CHN):
            line = CHN[CHNlinenum]
            if isTime(line):
                (start,end) = getTimes(line)
                output.write('\n')
                output.write('Dialogue: 0,')
                output.write(start+','+end)
                CHNlinenum +=1
                output.write(',Chinese,,0,0,0,,')
                CHNlinenum = writeln(CHN,output,CHNlinenum)
            else:
                CHNlinenum +=1
        if ENGlinenum < len(ENG):
            line = ENG[ENGlinenum]
            if isTime(line):
                (start,end) = getTimes(line)
                output.write('\n')
                output.write('Dialogue: 0,')
                output.write(start+','+end)
                ENGlinenum +=1
                output.write(',English,,0,0,0,,')
                ENGlinenum = writeln(ENG,output,ENGlinenum)
            else:
                ENGlinenum +=1

def writeSubSameTime(CHN,ENG,output):
    ENGlinenum = 0
    CHNlinenum = 0
    while CHNlinenum < len(CHN):
        line = CHN[CHNlinenum]
        if isTime(line):
            (start,end) = getTimes(line)
            output.write('\n')
            output.write('Dialogue: 0,')
            output.write(start[1:-4]+'.'+start[-3:-1]+','+end[1:-4]+'.'+end[-3:-1])
            CHNlinenum +=1
            output.write(',English,,0,0,0,,')
            CHNlinenum = writeln(CHN,output,CHNlinenum)
            output.write('\\N')
            ENGlinenum = writeln(ENG,output,ENGlinenum+1)
        else:
            CHNlinenum +=1
            ENGlinenum +=1

def getStart_ass(file):
    count = 2
    start = re.compile('\[Events\]')
    file = open(file,'r')
    while not(start.match(file.readline())):
        count+=1
    file.close()
    return count

def getStartTime_ass(line):
    line = re.sub('\A[^,]*,','',line)
    line = re.sub(',.*$','',line)
    return line

def getEndTime_ass(line):
    line = re.sub('\A([^,]*,){2}','',line)
    line = re.sub(',.*$','',line)
    return line

def getSub_ass(line):
    line = re.sub('\A([^,]*,){9}','',line)
    return line

def getCHN_ass(file):
    skip = getStart_ass(file)
    CHNline = re.compile('.*Chinese.*')
    file = open(file,'r')
    lines = file.readlines()[skip:]
    file.close()
    start = []
    end = []
    sub = []
    for line in lines:
        if CHNline.match(line):
            start += [getStartTime_ass(line)]
            end += [getEndTime_ass(line)]
            sub += [getSub_ass(line)]
    return start, end, sub

def write2srtCHN(file,output = 'CHNsub.srt'):
    (start,end,sub) = getCHN_ass(file)
    file = open(output,'w')
    for i in range(len(start)):
        linenum = i + 1
        file.write(str(linenum)+'\n')
        file.write(re.sub('\.',',',start[i]).rstrip()+' --> '+re.sub('\.',',',end[i]))
        file.write(sub[i] + '\n')
    file.close()

def getENG_ass(file):
    skip = getStart_ass(file)
    ENGline = re.compile('.*English.*')
    file = open(file,'r')
    lines = file.readlines()[skip:]
    file.close()
    start = []
    end = []
    sub = []
    for line in lines:
        if ENGline.match(line):
            start += [getStartTime_ass(line)]
            end += [getEndTime_ass(line)]
            sub += [getSub_ass(line)]
    return start, end, sub

def write2srtENG(file,output = 'ENGsub.srt'):
    (start,end,sub) = getENG_ass(file)
    file = open(output,'w')
    for i in range(len(start)):
        linenum = i + 1
        file.write(str(linenum)+'\n')
        file.write(re.sub('\.',',',start[i]).rstrip()+' --> '+re.sub('\.',',',end[i]))
        file.write(sub[i] + '\n')
    file.close()
